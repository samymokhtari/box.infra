# docker-compose.yml for any database you want to use on the compute instance "vm-sql"
version: "3.9"

name: box

services:
  webserver:
    container_name: webserver
    user: root
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    #restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:rw
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
      - net1

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  api:
    container_name: api
    image: samy266/box:latest
    ports:
      - 8080:80
    depends_on:
      - azure-sql-edge
      - webserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - API_KEY=${BOX_API_KEY}
      - ConnStr=Server=azure-sql-edge;Database=box;User=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;Encrypt=True;
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    volumes:
      - box-files:/box/
    networks:
      - net1

  azure-sql-edge:
    container_name: azure-sql-edge
    user: root
    restart: always
    image:  mcr.microsoft.com/azure-sql-edge:latest # OR mcr.microsoft.com/mssql/server
    ports:
      - "1433:1433"
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD} # example: yourStrong(!)Password
      ACCEPT_EULA: 'Y'
      MSSQL_PID: "Developer"
    volumes:
      - sqlserver:/var/opt/mssql/
    networks:
      - net1

  mariadb:
    container_name: mariadb
    image: mariadb:latest
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      MARIADB_USER: ${MARIADB_ROOT_USERNAME}
      MARIADB_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    networks:
      - net1

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana
    networks:
      - net1

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - net1
  
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./grafana/promtail-config.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
    networks:
      - net1

networks:
  net1:
    name: net1

volumes:
  sqlserver:
   driver: local
  mariadb:
   driver: local
  box-files:
   driver: local
  grafana:
   driver: local