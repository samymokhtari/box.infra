name: On-Premise CD
on:
  push:
    branches: [on-premise, fix/cd]

env:
  env: "production"
  dockercompose: "docker-compose.yml"
  script_install: "script_install.sh"
  folder: scripts

jobs:
  deploy:
    env:
      FULLPATH: /home/${{ secrets.SSH_USERNAME }}/scripts
    environment: on-premise
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy Script Install via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ${{ env.script_install }}
          target: ${{ env.FULLPATH }}

      - name: Copy Docker Compose via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ${{ env.dockercompose }}
          target: ${{ env.FULLPATH }}

      - name: Give permissions
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            chmod +x ${{ env.FULLPATH }}/${{ env.script_install }}
            chmod +x ${{ env.FULLPATH }}/${{ env.dockercompose }}

      - name: Set environments variable in a file
        run: |
          echo "ENV=${{ env.env }}"
          echo "MSSQL_SA_PASSWORD=${{ secrets.DB_PASS }}"
          echo "MARIADB_ROOT_USERNAME=${{ secrets.DB_USER }}"
          echo "MARIADB_ROOT_PASSWORD=${{ secrets.DB_PASS }}"
          

      - name: Setup Machine and Deploy Docker
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ${{ env.FULLPATH }}/${{ env.script_install }}
            echo Starting Docker Compose
            cd ${{ env.FULLPATH }} && sudo docker compose up -d
      